generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Exhibition {
  exhibition_id Int       @id @default(autoincrement())
  title         String?
  date          String?
  Image         String?
  CreatedDate   DateTime? @default(now()) @db.Timestamptz(6)
  ModifiedDate  DateTime? @default(now()) @db.Timestamptz(6)
  user_id       Int
  type          String?
  view          Int       @default(0)
  place         String?
  User          User      @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model SelectedWorks {
  selectedWorks_id Int       @id @default(autoincrement())
  title            String?
  description      String?
  exhibitions      String?
  CreatedDate      DateTime? @default(now()) @db.Timestamptz(6)
  ModifiedDate     DateTime? @default(now()) @db.Timestamptz(6)
  user_id          Int
  view             Int       @default(0)
  Image            String?
  User             User      @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model User {
  user_id       Int             @id @default(autoincrement())
  UserName      String          @unique @db.VarChar(255)
  email         String?         @unique @db.VarChar(255)
  CreatedDate   DateTime?       @default(now()) @db.Timestamptz(6)
  ModifiedDate  DateTime?       @default(now()) @db.Timestamptz(6)
  role          String?         @unique @db.VarChar(255)
  Exhibition    Exhibition[]
  SelectedWorks SelectedWorks[]
  news          news[]
}

model news {
  news_id      Int       @id @default(autoincrement())
  title        String?
  description  String?
  link         String?
  view         Int       @default(0)
  Image        String?
  CreatedDate  DateTime? @default(now()) @db.Timestamptz(6)
  ModifiedDate DateTime? @default(now()) @db.Timestamptz(6)
  user_id      Int
  User         User      @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}
